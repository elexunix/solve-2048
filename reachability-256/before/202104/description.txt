Есть такая игра -- 2048. У неё есть случайность в правилах, там описано, с какими вероятностями какая может быть ответная плитка. Вопрос, который ставит перед собой как цель этот проект -- какой же из двух случаев верен: есть ли выигрышная стратегия за игрока, то есть которая может совершенно всегда набрать 2048, как бы ей ни не везло, либо же есть метод, как ставить ответные плитки так, чтобы выиграть было невозможно. В оригинальной игре выиграть довольно несложно, потому что ответы случайные, но здесь исследуется, что будет, если оба "игрока" будут играть оптимально. Было замечено, что это может быть вычислено в наше время, однако это ещё не было сделано (в интернете можно только найти, как это сделали с 3 на 3, а также как всякие подходы машинного обучения и прочего тестировали на 4 на 4, но никто не утверждает, что он знает, "можно ли выиграть, если не везёт").
Проект также ставит перед собой цель создать интерактивное подтверждение полученного результата, то есть игру. Это должно быть довольно эффектно для многих, поскольку изначальная игра была довольно популярной, в неё сыграли миллионы людей, а теперь можно сделать либо программу, которая всегда будет выигрывать, либо наоборот, программу, которая никогда не даст выиграть. Пока промежуточные результаты больше указывают на второе, кстати.
Игра была решена на меньших полях, включая 3 на 4, на моём ноутбуке, ответы в приложенной табличке. Также есть интерактивные программы, демонстрирующие эти результаты. 3 на 4 версия считается всего 15 минут и не даёт набрать 128 (64 можно). Иронично, что именно оригинальный размер поля -- первый, на котором не получается быстро её решить. Вообще не получается это сделать на этом ноутбуке, но по прикидкам, это может получиться на кластере.
Планируется решать это методом динамического программирования, по сути, но вообще, имеется в виду просто обход неявного графа осмысленных позиций, начиная с "больших" (с большей суммой). Время вычисления сильно зависит от ответа на задачу (максимальной достижимой плитки). Ответы для меньших полей приложены, из них у участников проекта есть "предположение по умолчанию" для примерной оценки времени вычисления -- за него было взято, что ответ 256. Однако ниже приводится информация для разных реалистичных ответов. Более конкретно, планируется сделать несколько запросов с увеличивающимися количествами ресурсов, каждый соответствует проверке очередной плитки, и остановиться, когда увидим, что плитку набрать невозможно.
В то, что ответ <128, мало верится, это слишком оптимистично.
Проверке ответа 128, то есть проверке достигаемости 256, соответствует первый запрос, на тысячу с чем-то часов GPU, его результатом, скорее всего, будет ответ, что 256 гарантированно набрать можно. В этом случае мы постараемся сделать программу, это подтверждающую интерактивно (набирающую 256). К сожалению, её придётся потом удалить, потому что она будет занимать несколько десятков терабайт (или несколько терабайт, если уделить заметное время её сжатию), поскольку будет использовать сохранённые результаты вычисления, но не будет при этом конечным продуктом. Тем не менее, её можно будет использовать, как минимум, чтобы протестировать.
Проверке ответа 256 будет, вероятно, соответствовать второй запрос (если с первым всё пойдёт по плану), на несколько тысяч GPU-часов. То есть мы уже будем знать, что 256 набрать можно, а этим запросом будем проверять, что это максимум, то есть что 512 уже нельзя. Если действительно нельзя, это конец (победа), в таком случае приступим к сильному сжатию стратегии (там сложнее, она больше, тем не менее, планируется сжать до нескольких терабайт) и подготовке программы (которую потом можно будет, например, поместить на сайте Вышки на специальной страничке). Если же можно, то мы сможем сделать соответствующее приложение, которое умеет набирать 256, но понятно, что это не так эффектно, так что мы планируем в этом случае сделать ещё один запрос, на 512. Заметим, кстати, что согласно дефолтному предположению ещё на этом этапе уже должно было "повезти", то есть дальше не нужно будет считать.
Так вот, дальше, если нужно, будет запрос для 512, то есть по сути, он будет проверять уже недостижимость плитки 1024. Это будет большой запрос. Пока кажется, что на несколько десятков тысяч GPU-часов. Его результатом будет либо что можно набрать, либо что нельзя 1024. Более конкретный план в этом случае пока не разработан, поскольку это правда будет уже большое вычисление, и если даже оно будет одобрено, у него будет большое количество пока неизвестных реализационных трудностей, такие даже есть для 128 и 256 в достаточном, но вроде преодолеваемом количестве.